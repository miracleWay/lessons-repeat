@use "sass:math";

// Мінімальна ширина сторінки
$minWidth: 320;
// Ширина полотна (макету)
$maxWidth: 1920;
// Ширина обмежуючого контейнера (0 = немає обмеження)
$maxWidthContainer: 1170;
// Загальний відступ у контейнера
// (30 = по 15px ліворуч і праворуч, 0 = немає відступу)
$containerPadding: 30;
// Ширина спрацьовування першого брейкпоінту
$containerWidth: $maxWidthContainer + $containerPadding;

// Шрифти
@import "_fonts.scss";
// Обнулення
@import "_reset.scss";
// Компоненти
@import "_common.scss";
// Функції
@import "_functions.scss";

body {
	background-color: #333;
	font-size: toRem(14);
}

.wrapper {
	overflow: clip;
	display: flex;
	flex-direction: column;
	min-height: 100%;
}
.wrapper main {
	flex-grow: 1;
}

// Відносні одиниці

// Відсотки

.page {
	// font-size: 50%;
	color: #fff;

	/*
	position: absolute;
	top: 30%;
	left: 50%;

	
	padding-top: 50%;
	padding-left: 10%;

	transform: translate(10%, 15%);


	display: grid;
	grid-template-columns: 30% 1fr auto;
	*/
}
.page__container {
	max-width: #{$containerWidth}px;
	margin: 0 auto;
	padding-left: toRem(15);
	padding-right: toRem(15);
}
/*
.relative {
	position: relative;
	left: 50%;
	top: 30%;
}
*/
/*
.block {
	width: 30%;
	background-color: #77608d;
	height: 25%;
}*/
/*
.padding {
	padding-top: 50%;
	padding-left: 10%;
}
*/
/*
.grid {
	display: grid;
	grid-template-columns: 30% 1fr;
}
.grid__item {
	width: 50%;
	background-color: #77608d;
}
.flex {
	display: flex;
}
.flex__item {
	flex-grow: 0;
	flex-shrink: 0;
	flex-basis: 30%;
	background-color: #7a956b;
	padding: 15px;
}
.absolute {
	position: absolute;
	top: 50%;
}
.transform {
	transform: translate(10%, 50%);
	background-color: #794f45;
}*/

// REM - береться від глобального розміру шрифту
// EM - береться від поточного або
// успаткованого розміру шрифту
/*
.page {
	font-size: 50px;
}
.px {
	font-size: 16px;
}
.rem {
	font-size: 1rem;
	width: 5rem;
}
.em {
	font-size: 2rem;
	// = 16 * 2 = 32px
	width: 3em;
	// = 32 * 3 = 96px
}
*/

// PX
.exmpl {
	// .exmpl__title
	&__title {
		font-size: 50px;
		margin-bottom: 20px;
		@media (max-width: 767.98px) {
			font-size: 30px;
			margin-bottom: 12px;
		}
	}
	// .exmpl__text
	&__text {
	}
}

// REM + EM
.exmpl {
	// .exmpl__title
	&__title {
		font-size: toRem(50); // 50px
		margin-bottom: toEm(20, 50); // 20px
		@media (max-width: toEm(767.97)) {
			// береться, як REM від глобального розміру шрифту
			font-size: toRem(30);
		}
	}
	// .exmpl__text
	&__text {
	}
}

// Замість PX використовуємо REM
// Але іноді:
// Використовуємо EM коли хочемо щоб значеня
// тих чи інших властивостей залежали від
// поточного або успаткованого розміру шрифту об'єкту.
// Та у медіа запитах
// Використовуємо PX тоді, коли хочемо
// зафіксувати значення тих чи інших властивостей

// Одиниці в'юпорта VH VW VMIN VMAX
// 1vh - 1% висоти в'юпорта
// 1vw - 1% ширини в'юпорта
// 1svh - 1% мінімальної висоти в'юпорта
// 1dvh - 1% динамічної висоти в'юпорта
// 1vmax - 1% більшої сторони (висоти або ширини)
// 1vmin - 1% меньшої сторони (висоти або ширини)

.viewport {
}

// Змінні в CSS

// Змінні
// Створення змінної
// Глобальні змінні
/*
:root {
	--mainColor: #000;
}

// Персональні змінні
.block {
	--mainColor: #000;

}

// Використання змінної

:root {
	--mainColor: green;
}

// Глобальні змінні
.text {
	color: var(--mainColor);
}
// Персональні змінні
.block {
	--mainColor: #000;
	color: var(--mainColor);
}
*/

// CALC  - крута штука
.calc {
	width: calc(50% - 30px);
	background-color: #7a956b;
	padding: toRem(15);
}

// CLAMP  - крута штука
.clamp {
	// width: clamp(toRem(280), 50vw, toRem(800));
	background-color: #77608d;
	padding: toRem(15);
	@include adaptiveValue("font-size", 40, 18, 0, 800, 500);
}

// Інше в CSS
// pointer-events - керує взаємодією з
// об'єктом не змінюючи його видимість
.pointer-events {
	pointer-events: none; // Викнено
	pointer-events: all; // Увікнено (за замовченням)
}
// cursor
.cursor {
	// cursor: pointer;
	// cursor: default;
}

// columns (додатково)
// https://www.youtube.com/watch?v=P4EgTuQzgd8

// :HAS,
// Перевіряє наявність дочірнього елементу

.grid-has {
	display: grid;
	@supports selector(:has(*)) {
		&:has(> .grid-has__side) {
			grid-template-columns: toRem(300) 1fr;
			@media (max-width: toEm(767.98)) {
				grid-template-columns: auto;
			}
		}
	}

	// .grid-has__header
	&__header {
		background-color: #794f45;
		padding: toRem(15);
		@media (min-width: toEm(767.98)) {
			.grid-has:has(> .grid-has__side) & {
				grid-column: span 2;
			}
		}
	}
	// .grid-has__side
	&__side {
		background-color: #7a956b;
		padding: 15px;
	}
	// .grid-has__content
	&__content {
		background-color: #77608d;
		padding: 15px;
	}
	// .grid-has__footer
	&__footer {
		background-color: #794f45;
		padding: toRem(15);
		@media (min-width: toEm(767.98)) {
			.grid-has:has(> .grid-has__side) & {
				grid-column: span 2;
			}
		}
	}
}
